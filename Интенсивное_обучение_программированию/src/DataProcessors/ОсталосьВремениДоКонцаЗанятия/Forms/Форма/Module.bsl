#Область ОписаниеПеременных

&НаКлиенте
Перем ДоОкончанияЧас;
Перем ДоОкончанияМин; 

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВвестиДатуВремяОкончания();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВвестиДатуВремяОкончания()
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект);
	ПоказатьВводДаты(Оповещение, , "Введите дату и время окончания урока", ЧастиДаты.ДатаВремя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты(ДатаВремяОкончания, Параметры) Экспорт
	
	Если ДатаВремяОкончания = Неопределено Тогда
		
		Сообщить("Введена неверная дата");
		Возврат;
		
	ИначеЕсли ДатаВремяОкончания < ТекущаяДата() Тогда 
		
		Сообщить("Урок уже закончен");
		Возврат;
		
	КонецЕсли;
	
	Объект.ДатаВремяОкончания = ДатаВремяОкончания;
	РсчитатьВремяДоОкончания ();
	
КонецПроцедуры

&НаКлиенте
Процедура РсчитатьВремяДоОкончания () 
	
	Если Час(Объект.ДатаВремяОкончания) = Час(ТекущаяДата()) Тогда
		
		ДоОкончанияЧас = 0;
		ДоОкончанияМин = Минута(Объект.ДатаВремяОкончания) - Минута(ТекущаяДата()); 
		
	КонецЕсли;	
	
	Если Минута(Объект.ДатаВремяОкончания) < Минута(ТекущаяДата()) Тогда
		
		ДоОкончанияЧас = Час(Объект.ДатаВремяОкончания) - Час(ТекущаяДата())-1; 
		ДоОкончанияМин = 60 - (Минута(ТекущаяДата()) - Минута(Объект.ДатаВремяОкончания)); 
	Иначе
		ДоОкончанияЧас = Час(Объект.ДатаВремяОкончания) - Час(ТекущаяДата()); 
		ДоОкончанияМин = Минута(Объект.ДатаВремяОкончания) - Минута(ТекущаяДата()); 
		
	КонецЕсли;
	
	Сообщить(СтрШаблон("До конца занаятия %1 ч. %2 мин.", ДоОкончанияЧас, ДоОкончанияМин));
	
КонецПроцедуры

#КонецОбласти